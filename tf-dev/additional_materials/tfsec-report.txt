
Result #1 CRITICAL Listener for application load balancer does not use HTTPS. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-application\alb.tf:26
   via main.tf:18-52 (module.application)
────────────────────────────────────────────────────────────────────────────────
   23    resource "aws_lb_listener" "lb_listener" {
   24      load_balancer_arn = aws_lb.load_balancer.arn
   25      port              = "80"
   26  [   protocol          = "HTTP" ("HTTP")
   27    
   28      default_action {
   29        type             = "forward"
   30        target_group_arn = aws_lb_target_group.lb_target_group.arn
   31      }
   32    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-elb-http-not-used
      Impact Your traffic is not protected
  Resolution Switch to HTTPS to benefit from TLS security features

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/elb/http-not-used/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener
────────────────────────────────────────────────────────────────────────────────


Result #2 HIGH Load balancer is exposed publicly. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-application\alb.tf:3
   via main.tf:18-52 (module.application)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_lb" "load_balancer" {
    2      name               = var.load_balancer_name
    3  [   internal           = false (false)
    4      load_balancer_type = "application"
    5      subnets            = var.subnet_ids
    6      drop_invalid_header_fields = true
    7    
    8      enable_deletion_protection = false
    9    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-elb-alb-not-public
      Impact The load balancer is exposed on the internet
  Resolution Switch to an internal load balancer or add a tfsec ignore

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/elb/alb-not-public/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb
────────────────────────────────────────────────────────────────────────────────


Results #3-4 HIGH IAM policy document uses sensitive action 'sqs:DeleteMessage' on wildcarded resource '*' (2 similar results)
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-application\roles.tf:23
   via main.tf:18-52 (module.application)
────────────────────────────────────────────────────────────────────────────────
   18    resource "aws_iam_policy" "lambda_iam_policy" {
   ..  
   23  [     Version = "2012-10-17"
   ..  
   43    }
────────────────────────────────────────────────────────────────────────────────
  Individual Causes
  - C:\cloudnativeapp-terraform\modules\tf-application\roles.tf:18-52 (module.application) 2 instances
────────────────────────────────────────────────────────────────────────────────
          ID aws-iam-no-policy-wildcards
      Impact Overly permissive policies may grant access to sensitive resources
  Resolution Specify the exact permissions required, and to which resources they should apply instead of using wildcards.

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/iam/no-policy-wildcards/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document
────────────────────────────────────────────────────────────────────────────────


Result #5 HIGH Table encryption is not enabled. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\dynamodb_table.tf:1-18
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1  ┌ resource "aws_dynamodb_table" "dynamodb_table_cloudnativeapp-tf" {
    2  │   name           = "${var.dynamodb_table_name}"
    3  │   billing_mode   = "PROVISIONED"
    4  │   read_capacity  = 10
    5  │   write_capacity = 10
    6  │   hash_key       = "ImageName"
    7  │   range_key      = "LabelValue"
    8  │ 
    9  └   attribute {
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-dynamodb-enable-at-rest-encryption
      Impact Data can be freely read if compromised
  Resolution Enable encryption at rest for DAX Cluster

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/dynamodb/enable-at-rest-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption
────────────────────────────────────────────────────────────────────────────────


Result #6 HIGH Bucket does not have encryption enabled 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:1-3
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_s3_bucket" "s3_bucket_cloudnativeapp-tf" {
    2      bucket = var.bucket_name
    3    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-encryption
      Impact The bucket objects could be read if compromised
  Resolution Configure bucket encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/enable-bucket-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #7 HIGH Bucket does not encrypt data with a customer managed key. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:1-3
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_s3_bucket" "s3_bucket_cloudnativeapp-tf" {
    2      bucket = var.bucket_name
    3    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-encryption-customer-key
      Impact Using AWS managed keys does not allow for fine grained control
  Resolution Enable encryption using customer managed keys

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/encryption-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption
────────────────────────────────────────────────────────────────────────────────


Result #8 HIGH Public access block does not block public ACLs 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:15
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
   12    resource "aws_s3_bucket_public_access_block" "s3_bucket_pab_cloudnativeapp-tf" {
   13      bucket = aws_s3_bucket.s3_bucket_cloudnativeapp-tf.id
   14    
   15  [   block_public_acls       = false (false)
   16      block_public_policy     = false
   17      ignore_public_acls      = false
   18      restrict_public_buckets = false
   19    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable blocking any PUT calls with a public ACL specified

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/block-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #9 HIGH Public access block does not block public policies 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:16
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
   12    resource "aws_s3_bucket_public_access_block" "s3_bucket_pab_cloudnativeapp-tf" {
   13      bucket = aws_s3_bucket.s3_bucket_cloudnativeapp-tf.id
   14    
   15      block_public_acls       = false
   16  [   block_public_policy     = false (false)
   17      ignore_public_acls      = false
   18      restrict_public_buckets = false
   19    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-block-public-policy
      Impact Users could put a policy that allows public access
  Resolution Prevent policies that allow public access being PUT

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/block-public-policy/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy
────────────────────────────────────────────────────────────────────────────────


Result #10 HIGH Public access block does not ignore public ACLs 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:17
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
   12    resource "aws_s3_bucket_public_access_block" "s3_bucket_pab_cloudnativeapp-tf" {
   13      bucket = aws_s3_bucket.s3_bucket_cloudnativeapp-tf.id
   14    
   15      block_public_acls       = false
   16      block_public_policy     = false
   17  [   ignore_public_acls      = false (false)
   18      restrict_public_buckets = false
   19    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-ignore-public-acls
      Impact PUT calls with public ACLs specified can make objects public
  Resolution Enable ignoring the application of public ACLs in PUT calls

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/ignore-public-acls/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls
────────────────────────────────────────────────────────────────────────────────


Result #11 HIGH Public access block does not restrict public buckets 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:18
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
   12    resource "aws_s3_bucket_public_access_block" "s3_bucket_pab_cloudnativeapp-tf" {
   13      bucket = aws_s3_bucket.s3_bucket_cloudnativeapp-tf.id
   14    
   15      block_public_acls       = false
   16      block_public_policy     = false
   17      ignore_public_acls      = false
   18  [   restrict_public_buckets = false (false)
   19    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-buckets
      Impact Public buckets can be accessed by anyone
  Resolution Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/no-public-buckets/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡
────────────────────────────────────────────────────────────────────────────────


Result #12 HIGH Bucket has a public ACL: 'public-read'. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:28
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
   21    resource "aws_s3_bucket_acl" "s3_bucket_acl_cloudnativeapp-tf" {
   22      depends_on = [
   23        aws_s3_bucket_ownership_controls.s3_bucket_oc_cloudnativeapp-tf,
   24        aws_s3_bucket_public_access_block.s3_bucket_pab_cloudnativeapp-tf
   25      ]
   26    
   27      bucket = aws_s3_bucket.s3_bucket_cloudnativeapp-tf.id
   28  [   acl    = "public-read" ("public-read")
   29    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-no-public-access-with-acl
      Impact Public access to the bucket can lead to data leakage
  Resolution Don't use canned ACLs or switch to private acl

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/no-public-access-with-acl/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket
────────────────────────────────────────────────────────────────────────────────


Result #13 HIGH Topic does not have encryption enabled. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\sns_topic.tf:1-3
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_sns_topic" "sns_image_notification-tf" {
    2      name = var.sns_name
    3    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-sns-enable-topic-encryption
      Impact The SNS topic messages could be read if compromised
  Resolution Turn on SNS Topic encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/sns/enable-topic-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse
────────────────────────────────────────────────────────────────────────────────


Result #14 HIGH Queue is not encrypted 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\sqs_queue.tf:1-4
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_sqs_queue" "sqs_queue_cloudnativeapp-tf" {
    2      name       = var.sqs_name
    3      fifo_queue = false
    4    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-sqs-enable-queue-encryption
      Impact The SQS queue messages could be read if compromised
  Resolution Turn on SQS Queue encryption

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/sqs/enable-queue-encryption/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse
────────────────────────────────────────────────────────────────────────────────


Result #15 MEDIUM Point-in-time recovery is not enabled. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\dynamodb_table.tf:1-18
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1  ┌ resource "aws_dynamodb_table" "dynamodb_table_cloudnativeapp-tf" {
    2  │   name           = "${var.dynamodb_table_name}"
    3  │   billing_mode   = "PROVISIONED"
    4  │   read_capacity  = 10
    5  │   write_capacity = 10
    6  │   hash_key       = "ImageName"
    7  │   range_key      = "LabelValue"
    8  │ 
    9  └   attribute {
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-dynamodb-enable-recovery
      Impact Accidental or malicious writes and deletes can't be rolled back
  Resolution Enable point in time recovery

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/dynamodb/enable-recovery/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery
────────────────────────────────────────────────────────────────────────────────


Result #16 MEDIUM Bucket does not have logging enabled 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:1-3
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_s3_bucket" "s3_bucket_cloudnativeapp-tf" {
    2      bucket = var.bucket_name
    3    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-bucket-logging
      Impact There is no way to determine the access to this bucket
  Resolution Add a logging block to the resource to enable access logging

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/enable-bucket-logging/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket
────────────────────────────────────────────────────────────────────────────────


Result #17 MEDIUM Bucket does not have versioning enabled 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\s3_bucket.tf:1-3
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_s3_bucket" "s3_bucket_cloudnativeapp-tf" {
    2      bucket = var.bucket_name
    3    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-s3-enable-versioning
      Impact Deleted or modified data would not be recoverable
  Resolution Enable versioning to protect against accidental/malicious removal or modification

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/s3/enable-versioning/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning
────────────────────────────────────────────────────────────────────────────────


Result #18 LOW Function does not have tracing enabled. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-application\main.tf:1-8
   via main.tf:18-52 (module.application)
────────────────────────────────────────────────────────────────────────────────
    1    resource "aws_lambda_function" "lambda_function" {
    2      function_name    = var.lambda_function_name
    3      role             = aws_iam_role.lambda_iam_role.arn
    4      filename         = "${path.module}/lambda_function_payload.zip"
    5      runtime          = "python3.12"
    6      handler          = "index.lambda_handler"
    7      source_code_hash = data.archive_file.lambda_archive_file_cloudnativeapp-tf.output_base64sha256
    8    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-lambda-enable-tracing
      Impact Without full tracing enabled it is difficult to trace the flow of logs
  Resolution Enable tracing

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/lambda/enable-tracing/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode
────────────────────────────────────────────────────────────────────────────────


Result #19 LOW Log group is not encrypted. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-application\main.tf:10-12
   via main.tf:18-52 (module.application)
────────────────────────────────────────────────────────────────────────────────
   10    resource "aws_cloudwatch_log_group" "cloudwatch_log_group" {
   11      name = var.cloudwatch_log_group
   12    }
────────────────────────────────────────────────────────────────────────────────
          ID aws-cloudwatch-log-group-customer-key
      Impact Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.
  Resolution Enable CMK encryption of CloudWatch Log Groups

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/cloudwatch/log-group-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id
────────────────────────────────────────────────────────────────────────────────


Result #20 LOW Table encryption does not use a customer-managed KMS key. 
────────────────────────────────────────────────────────────────────────────────
  C:\cloudnativeapp-terraform\modules\tf-environment\dynamodb_table.tf:1-18
   via main.tf:1-16 (module.environment)
────────────────────────────────────────────────────────────────────────────────
    1  ┌ resource "aws_dynamodb_table" "dynamodb_table_cloudnativeapp-tf" {
    2  │   name           = "${var.dynamodb_table_name}"
    3  │   billing_mode   = "PROVISIONED"
    4  │   read_capacity  = 10
    5  │   write_capacity = 10
    6  │   hash_key       = "ImageName"
    7  │   range_key      = "LabelValue"
    8  │ 
    9  └   attribute {
   ..  
────────────────────────────────────────────────────────────────────────────────
          ID aws-dynamodb-table-customer-key
      Impact Using AWS managed keys does not allow for fine grained control
  Resolution Enable server side encryption with a customer managed key

  More Information
  - https://aquasecurity.github.io/tfsec/v1.28.6/checks/aws/dynamodb/table-customer-key/
  - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption
────────────────────────────────────────────────────────────────────────────────


  timings
  ──────────────────────────────────────────
  disk i/o             2.9981ms
  parsing              18.9964ms
  adaptation           2.0019ms
  checks               5.0004ms
  total                28.9968ms

  counts
  ──────────────────────────────────────────
  modules downloaded   0
  modules processed    3
  blocks processed     99
  files read           19

  results
  ──────────────────────────────────────────
  passed               31
  ignored              0
  critical             1
  high                 13
  medium               3
  low                  3

  31 passed, 20 potential problem(s) detected.

